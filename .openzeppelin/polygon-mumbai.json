{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x3b5e86162A6A038F5Bd6a1816B9CC015213b4aa8",
      "txHash": "0xda655e0dd0ba1d31154a07ed59276b206988ae80b973ea4f0afcf334ebc81e32",
      "kind": "uups"
    },
    {
      "address": "0xCE392761C9f32960b25e476f658753e176954fEf",
      "txHash": "0xe62b4a59f8196b071a621e6be550a9177873bb5961308bbce81bb16661584aa2",
      "kind": "uups"
    },
    {
      "address": "0xF98Fe5546b6Fa054832E948496E4D7EeD27855a3",
      "txHash": "0x87aa2aa5c93af304f9642300d60c1eb866378a02dbf6f8da7e259ed4ba3b01d0",
      "kind": "uups"
    },
    {
      "address": "0x4c76fF7004a2964BfC10e25060d466545bbbaC69",
      "txHash": "0xf11a4ed4ab1bb26b3f6642e25c8ddec3759a155253f7978e0e482fe9c8b8d86d",
      "kind": "uups"
    },
    {
      "address": "0x5c820C289865ce3001fD22A863dbcB7d79A5e337",
      "txHash": "0x7631ade5f88566ccbc8249f7562c9bdc48ecb63462920a73bb2fb36a7bdd48b2",
      "kind": "uups"
    },
    {
      "address": "0x954E0a16037AfC62F6816D1b38a6BFbb3B89f93F",
      "txHash": "0xb128ba7fba6507bbcb4d3c92c96f8bde1d410f8b9cbb443d2618a58a57e878bb",
      "kind": "uups"
    },
    {
      "address": "0x6FA339Bd14A7fAb444BBf1c192A9a2Dde94D7B59",
      "txHash": "0x2c5dfe6da86a8a87c5264aa41418e9a7ab4a4f0918e0fcf3776888c7f9a8d7d1",
      "kind": "uups"
    },
    {
      "address": "0x19bb7792D083EE58cace2467708d9369090B8089",
      "txHash": "0x6adf8bc0a4fcf1d6fc90a80cd37ebfa64d535a32acf99734e34a22d7579279d3",
      "kind": "uups"
    },
    {
      "address": "0x67e7e907Ab56dC726240337844B000A3020A9004",
      "txHash": "0x9c1f28dce8926747ea05a456888e0155d2ca3d721923717a779b751df4a20d8e",
      "kind": "uups"
    },
    {
      "address": "0xb5250eA1A4506E9a96f3B8599704b8B88670521E",
      "txHash": "0x14635cacd11eaa8c89d8da03e1e57a6e51fd92c41d76d5bfb5fe9edb28b6e68d",
      "kind": "uups"
    },
    {
      "address": "0x9b8830BbE054e26c27691D0319A760F5Eeb6f096",
      "txHash": "0x5cc30b3b43f425a574996c8512ca1f3bb15dcc2ad18ac6fe29d6d16c252b8e17",
      "kind": "uups"
    },
    {
      "address": "0x1b67C9462588301160c3338422a266D819B150c4",
      "txHash": "0x3b93070eb9eb7b06aeb28aa71d1b880e76db5af40ec1a4ec31f162095b856741",
      "kind": "uups"
    },
    {
      "address": "0x377Bd5069A24e2aD5dd8597B62130F72c4D73675",
      "txHash": "0x0551ebc59e2e728467b2b24cae085a3921b9d624c3870667117732dbd332927d",
      "kind": "uups"
    },
    {
      "address": "0x103f04B555Bb4b7f29EC766f64Bb21faCfF4BCce",
      "txHash": "0xc33b2a2b91cb12be90e017cbd5ef9f7e76ff6191395ddedc187e5fd143507e8a",
      "kind": "uups"
    },
    {
      "address": "0x0487a2658873D43C9952f4385C26f809173E5758",
      "txHash": "0xdeb470130cf71a4d285d8a3c58814b843e53927036ed0c388aa4e5a6e4228741",
      "kind": "uups"
    },
    {
      "address": "0xb2Fa43C80121ed969009FcD4fC3CEC6d6A011a42",
      "txHash": "0x3c375473d6d3d8dc314c54fe1aed92802df0f5b67836b3e959abcc90cda43530",
      "kind": "uups"
    },
    {
      "address": "0x96c93c91fBe33E0CF682732159cF2109950690fa",
      "txHash": "0x6ad5f220c14af532ceb296ab3f995ff4dc764946bbee53251ad3de8382685389",
      "kind": "uups"
    },
    {
      "address": "0x3b334155B4Ef5768281fa81DFeDc96Adc8755bA7",
      "txHash": "0x09a489bb82aeaacb41436f9b20e711f8a1b5f3b3d20fa304875d4fb30ed576e8",
      "kind": "uups"
    },
    {
      "address": "0xA98a2D8789a4fEC8A74f5cA80fDe4a1a276a7b0B",
      "txHash": "0xfdea05c1dce0169a1bf67b74ca183204e56f35d0f02351582d0c811f49e5cbb4",
      "kind": "uups"
    }
  ],
  "impls": {
    "9934d5ce77ac1ab6f7369b33ac02cb4b2a4694f07c3f9bd645fb7c722a9edfb4": {
      "address": "0xC0675C5cD5C2a4184f7d920BA3fFf35f18E5Ce15",
      "txHash": "0x5fa48e3900c0613277124484e7f883988d286e4311c1ef4938c0bd4008ecf156",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_struct(Counter)3279_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "254",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)2118_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_struct(Checkpoint)2118_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:302"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)2118_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)2118_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)3279_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)2118_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3279_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "91ee3d6612c6b56ee1b30ddc2efe20cd5c1d7d5e9cb97a6cef46a7847a73b58b": {
      "address": "0x4D607367D5ACA590eAd38249411426d503A71b1a",
      "txHash": "0x0abb7f9bc5fac9ccbd1e54e2debee4a3284566ebcdd45faccc072445fd0f612c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "bitsToken",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20Votes)6917",
            "contract": "CertiBits",
            "src": "contracts/certibits_rewardV1.sol:19"
          },
          {
            "label": "totalCertiBits",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "CertiBits",
            "src": "contracts/certibits_rewardV1.sol:20"
          },
          {
            "label": "bonusReward",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "CertiBits",
            "src": "contracts/certibits_rewardV1.sol:21"
          },
          {
            "label": "recipient",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CertiBits",
            "src": "contracts/certibits_rewardV1.sol:22"
          },
          {
            "label": "hash2SignaturesList",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(signature)6947_storage)dyn_storage)",
            "contract": "CertiBits",
            "src": "contracts/certibits_rewardV1.sol:30"
          },
          {
            "label": "address2SignaturesList",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)",
            "contract": "CertiBits",
            "src": "contracts/certibits_rewardV1.sol:31"
          },
          {
            "label": "address2hashstate",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "contract": "CertiBits",
            "src": "contracts/certibits_rewardV1.sol:32"
          },
          {
            "label": "pubkey2IDu",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CertiBits",
            "src": "contracts/certibits_rewardV1.sol:33"
          },
          {
            "label": "address2state",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CertiBits",
            "src": "contracts/certibits_rewardV1.sol:34"
          },
          {
            "label": "signatures",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CertiBits",
            "src": "contracts/certibits_rewardV1.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(signature)6947_storage)dyn_storage": {
            "label": "struct CertiBits.signature[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Votes)6917": {
            "label": "contract IERC20Votes",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(address => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_struct(signature)6947_storage)dyn_storage)": {
            "label": "mapping(string => struct CertiBits.signature[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(signature)6947_storage": {
            "label": "struct CertiBits.signature",
            "members": [
              {
                "label": "signer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sign_data",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
